import { Component, Injector, ViewEncapsulation, ViewChild } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { {{Entity_Name_Plural_Here}}ServiceProxy, {{Entity_Name_Here}}Dto {{Enum_Import_Here}}, Get{{Entity_Name_Here}}ForView } from '@shared/service-proxies/service-proxies';
import { NotifyService } from '@abp/notify/notify.service';
import { AppComponentBase } from '@shared/common/app-component-base';
import { TokenAuthServiceProxy } from '@shared/service-proxies/service-proxies';
import { CreateOrEdit{{Entity_Name_Here}}ModalComponent } from './create-or-edit-{{entity_Name_Here}}-modal.component';
import { View{{Entity_Name_Here}}ModalComponent } from './view-{{entity_Name_Here}}-modal.component';
import { appModuleAnimation } from '@shared/animations/routerTransition';
import { PagedListingComponentBase, PagedRequestDto } from '@shared/common/PagedListingComponentBase';
import { FileDownloadService } from '@shared/utils/file-download.service';
import { ModalHelper } from '@delon/theme';

import * as moment from 'moment';

@Component({
    templateUrl: './{{entity_Name_Plural_Here}}.component.html',
    encapsulation: ViewEncapsulation.None,
    animations: [appModuleAnimation()]
})
export class {{Entity_Name_Plural_Here}}Component extends PagedListingComponentBase<{{Entity_Name_Here}}Dto> {

	filterText = '';
    advancedFiltersAreShown = false;
    dataItems: Get{{Entity_Name_Here}}ForView[] = [];
{{Property_Filter_Def_Here}}{{NP_Filter_Def_Here}}
	{{enum_Def_Here}}

    constructor(
        injector: Injector,
        private _{{entity_Name_Plural_Here}}ServiceProxy: {{Entity_Name_Plural_Here}}ServiceProxy,
        private _notifyService: NotifyService,
        private _tokenAuth: TokenAuthServiceProxy,
        private _fileDownloadService: FileDownloadService,
        private _activatedRoute: ActivatedRoute,
        private _modalHelper: ModalHelper
    ) {
        super(injector);
    }

    create{{Entity_Name_Here}}(): void {
        let title = this.l('CreateNew{{Entity_Name_Here}}');

        this._modalHelper.createStatic(CreateOrEdit{{Entity_Name_Here}}ModalComponent, {}, {
            modalOptions: {
                nzTitle: title
            }
        }).subscribe(() => {
            this.refresh();
        });
    }

    edit{{Entity_Name_Here}}({{entity_Name_Here}}Id?: number): void {
        let title = this.l('Edit{{Entity_Name_Here}}');

        this._modalHelper.createStatic(CreateOrEdit{{Entity_Name_Here}}ModalComponent, {
            {{entity_Name_Here}}Id: {{entity_Name_Here}}Id
            }, {
                modalOptions: {
                    nzTitle: title
                }
            }).subscribe(() => {
                this.refresh();
            });
    }

    showViewModal() : void {
        let title = this.l('View{{Entity_Name_Here}}');

        this._modalHelper.createStatic(View{{Entity_Name_Here}}ModalComponent, {}, {
            modalOptions: {
                nzTitle: title
            }
        });
    }

    protected delete({{entity_Name_Here}}: {{Entity_Name_Here}}Dto): void {
        this.message.confirm(
            '',
            (isConfirmed) => {
                if (isConfirmed) {
                    this._{{entity_Name_Plural_Here}}ServiceProxy.delete({{entity_Name_Here}}.id)
                        .subscribe(() => {
                            this.refresh();
                            this.notify.success(this.l('SuccessfullyDeleted'));
                        });
                }
            }
        );
    }

    protected list(request: PagedRequestDto, pageNumber: number, finishedCallback: Function): void {
        this._{{entity_Name_Plural_Here}}ServiceProxy.getAll(
            this.filterText ? this.filterText : '',
            {{Property_Filter_Param_Here}}{{NP_Filter_Param_Here}}
            this.getSort(),
            request.skipCount,
            request.maxResultCount
        ).subscribe(result => {
            this.dataItems = result.items;
            finishedCallback();
            this.showPaging(result, pageNumber);
        });
    }

    {{Get_Excel_Method_Here}}
}